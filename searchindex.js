Search.setIndex({"alltitles": {"1. Basic training": [[5, "basic-training"]], "2. Custom parameters": [[5, "custom-parameters"]], "3. Save and resume training": [[5, "save-and-resume-training"]], "4. Custom utility functions": [[5, "custom-utility-functions"]], "Circuit Padding": [[0, null]], "Citation": [[5, "citation"]], "DD Strategies": [[3, null]], "Directory structure": [[5, "directory-structure"]], "GADD Core Module": [[1, null]], "GADD: Genetic Algorithm for Dynamical Decoupling": [[5, null]], "Group Operations": [[2, null]], "Install from PyPI": [[5, "install-from-pypi"]], "Install from Source": [[5, "install-from-source"]], "Installation": [[5, "installation"]], "Requirements": [[5, "requirements"]], "Usage Examples": [[5, "usage-examples"]], "Utility Functions": [[4, null]]}, "docnames": ["api/circuit_padding", "api/gadd", "api/group_operations", "api/strategies", "api/utility_functions", "index"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api/circuit_padding.rst", "api/gadd.rst", "api/group_operations.rst", "api/strategies.rst", "api/utility_functions.rst", "index.rst"], "indexentries": {"__init__() (gadd.circuit_padding.ddpulse method)": [[0, "gadd.circuit_padding.DDPulse.__init__", false]], "__init__() (gadd.gadd.gadd method)": [[1, "gadd.gadd.GADD.__init__", false]], "__init__() (gadd.gadd.trainingconfig method)": [[1, "gadd.gadd.TrainingConfig.__init__", false]], "__init__() (gadd.gadd.trainingresult method)": [[1, "gadd.gadd.TrainingResult.__init__", false]], "__init__() (gadd.gadd.trainingstate method)": [[1, "gadd.gadd.TrainingState.__init__", false]], "__init__() (gadd.strategies.colorassignment method)": [[3, "gadd.strategies.ColorAssignment.__init__", false]], "__init__() (gadd.strategies.ddsequence method)": [[3, "gadd.strategies.DDSequence.__init__", false]], "__init__() (gadd.strategies.ddstrategy method)": [[3, "gadd.strategies.DDStrategy.__init__", false]], "__init__() (gadd.strategies.standardsequences method)": [[3, "gadd.strategies.StandardSequences.__init__", false]], "__init__() (gadd.utility_functions.customutility method)": [[4, "gadd.utility_functions.CustomUtility.__init__", false]], "__init__() (gadd.utility_functions.ghzutility method)": [[4, "gadd.utility_functions.GHZUtility.__init__", false]], "__init__() (gadd.utility_functions.onenormdistance method)": [[4, "gadd.utility_functions.OneNormDistance.__init__", false]], "__init__() (gadd.utility_functions.successprobability method)": [[4, "gadd.utility_functions.SuccessProbability.__init__", false]], "__post_init__() (gadd.gadd.trainingresult method)": [[1, "gadd.gadd.TrainingResult.__post_init__", false]], "__post_init__() (gadd.strategies.ddsequence method)": [[3, "gadd.strategies.DDSequence.__post_init__", false]], "__str__() (gadd.gadd.trainingconfig method)": [[1, "gadd.gadd.TrainingConfig.__str__", false]], "__str__() (gadd.gadd.trainingresult method)": [[1, "gadd.gadd.TrainingResult.__str__", false]], "__str__() (gadd.strategies.colorassignment method)": [[3, "gadd.strategies.ColorAssignment.__str__", false]], "__str__() (gadd.utility_functions.customutility method)": [[4, "gadd.utility_functions.CustomUtility.__str__", false]], "__str__() (gadd.utility_functions.ghzutility method)": [[4, "gadd.utility_functions.GHZUtility.__str__", false]], "__str__() (gadd.utility_functions.onenormdistance method)": [[4, "gadd.utility_functions.OneNormDistance.__str__", false]], "__str__() (gadd.utility_functions.successprobability method)": [[4, "gadd.utility_functions.SuccessProbability.__str__", false]], "apply_dd_strategy() (in module gadd.circuit_padding)": [[0, "gadd.circuit_padding.apply_dd_strategy", false]], "apply_strategy() (gadd.gadd.gadd method)": [[1, "gadd.gadd.GADD.apply_strategy", false]], "backend (gadd.gadd.gadd property)": [[1, "gadd.gadd.GADD.backend", false]], "benchmark_history (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.benchmark_history", false]], "benchmark_scores (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.benchmark_scores", false]], "best_score (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.best_score", false]], "best_scores (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.best_scores", false]], "best_sequence (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.best_sequence", false]], "best_sequences (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.best_sequences", false]], "colorassignment (class in gadd.strategies)": [[3, "gadd.strategies.ColorAssignment", false]], "coloring (gadd.gadd.gadd property)": [[1, "gadd.gadd.GADD.coloring", false]], "compute() (gadd.utility_functions.customutility method)": [[4, "gadd.utility_functions.CustomUtility.compute", false]], "compute() (gadd.utility_functions.onenormdistance method)": [[4, "gadd.utility_functions.OneNormDistance.compute", false]], "compute() (gadd.utility_functions.successprobability method)": [[4, "gadd.utility_functions.SuccessProbability.compute", false]], "compute() (gadd.utility_functions.utilityfunction method)": [[4, "gadd.utility_functions.UtilityFunction.compute", false]], "config (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.config", false]], "copy() (gadd.strategies.ddsequence method)": [[3, "gadd.strategies.DDSequence.copy", false]], "create_xb_gate() (in module gadd.strategies)": [[3, "gadd.strategies.create_xb_gate", false]], "create_yb_gate() (in module gadd.strategies)": [[3, "gadd.strategies.create_yb_gate", false]], "custom() (gadd.utility_functions.utilityfactory static method)": [[4, "gadd.utility_functions.UtilityFactory.custom", false]], "customutility (class in gadd.utility_functions)": [[4, "gadd.utility_functions.CustomUtility", false]], "ddpulse (class in gadd.circuit_padding)": [[0, "gadd.circuit_padding.DDPulse", false]], "ddsequence (class in gadd.strategies)": [[3, "gadd.strategies.DDSequence", false]], "ddstrategy (class in gadd.strategies)": [[3, "gadd.strategies.DDStrategy", false]], "decoupling_group (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.decoupling_group", false]], "dynamic_mutation (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.dynamic_mutation", false]], "evaluate() (gadd.gadd.gadd method)": [[1, "gadd.gadd.GADD.evaluate", false]], "final_population (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.final_population", false]], "from_circuit() (gadd.strategies.colorassignment class method)": [[3, "gadd.strategies.ColorAssignment.from_circuit", false]], "from_dict() (gadd.gadd.trainingconfig class method)": [[1, "gadd.gadd.TrainingConfig.from_dict", false]], "from_dict() (gadd.gadd.trainingstate class method)": [[1, "gadd.gadd.TrainingState.from_dict", false]], "from_dict() (gadd.strategies.ddstrategy class method)": [[3, "gadd.strategies.DDStrategy.from_dict", false]], "from_manual_assignment() (gadd.strategies.colorassignment class method)": [[3, "gadd.strategies.ColorAssignment.from_manual_assignment", false]], "from_single_sequence() (gadd.strategies.ddstrategy class method)": [[3, "gadd.strategies.DDStrategy.from_single_sequence", false]], "gadd (class in gadd.gadd)": [[1, "gadd.gadd.GADD", false]], "gadd.circuit_padding": [[0, "module-gadd.circuit_padding", false]], "gadd.gadd": [[1, "module-gadd.gadd", false]], "gadd.strategies": [[3, "module-gadd.strategies", false]], "gadd.utility_functions": [[4, "module-gadd.utility_functions", false]], "gates (gadd.strategies.ddsequence attribute)": [[3, "gadd.strategies.DDSequence.gates", false]], "get() (gadd.strategies.standardsequences method)": [[3, "gadd.strategies.StandardSequences.get", false]], "get_color() (gadd.strategies.colorassignment method)": [[3, "gadd.strategies.ColorAssignment.get_color", false]], "get_instruction_duration() (in module gadd.circuit_padding)": [[0, "gadd.circuit_padding.get_instruction_duration", false]], "get_name() (gadd.utility_functions.customutility method)": [[4, "gadd.utility_functions.CustomUtility.get_name", false]], "get_name() (gadd.utility_functions.ghzutility method)": [[4, "gadd.utility_functions.GHZUtility.get_name", false]], "get_name() (gadd.utility_functions.onenormdistance method)": [[4, "gadd.utility_functions.OneNormDistance.get_name", false]], "get_name() (gadd.utility_functions.successprobability method)": [[4, "gadd.utility_functions.SuccessProbability.get_name", false]], "get_name() (gadd.utility_functions.utilityfunction method)": [[4, "gadd.utility_functions.UtilityFunction.get_name", false]], "get_qubits() (gadd.strategies.colorassignment method)": [[3, "gadd.strategies.ColorAssignment.get_qubits", false]], "get_sequence() (gadd.strategies.ddstrategy method)": [[3, "gadd.strategies.DDStrategy.get_sequence", false]], "ghz_state() (gadd.utility_functions.utilityfactory static method)": [[4, "gadd.utility_functions.UtilityFactory.ghz_state", false]], "ghzutility (class in gadd.utility_functions)": [[4, "gadd.utility_functions.GHZUtility", false]], "is_staggered() (gadd.strategies.standardsequences method)": [[3, "gadd.strategies.StandardSequences.is_staggered", false]], "iteration (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.iteration", false]], "iteration_data (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.iteration_data", false]], "iteration_data (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.iteration_data", false]], "list_available() (gadd.strategies.standardsequences method)": [[3, "gadd.strategies.StandardSequences.list_available", false]], "load_training_state() (gadd.gadd.gadd method)": [[1, "gadd.gadd.GADD.load_training_state", false]], "mode (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.mode", false]], "module": [[0, "module-gadd.circuit_padding", false], [1, "module-gadd.gadd", false], [3, "module-gadd.strategies", false], [4, "module-gadd.utility_functions", false]], "mutation_decay (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.mutation_decay", false]], "mutation_probability (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.mutation_probability", false]], "mutation_probability (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.mutation_probability", false]], "n_colors (gadd.strategies.colorassignment property)": [[3, "gadd.strategies.ColorAssignment.n_colors", false]], "n_iterations (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.n_iterations", false]], "normalize_counts() (in module gadd.utility_functions)": [[4, "gadd.utility_functions.normalize_counts", false]], "num_colors (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.num_colors", false]], "one_norm() (gadd.utility_functions.utilityfactory static method)": [[4, "gadd.utility_functions.UtilityFactory.one_norm", false]], "onenormdistance (class in gadd.utility_functions)": [[4, "gadd.utility_functions.OneNormDistance", false]], "optimization_level (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.optimization_level", false]], "parent_fraction (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.parent_fraction", false]], "plot_training_progress() (gadd.gadd.gadd method)": [[1, "gadd.gadd.GADD.plot_training_progress", false]], "pop_size (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.pop_size", false]], "population (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.population", false]], "seed (gadd.gadd.gadd property)": [[1, "gadd.gadd.GADD.seed", false]], "sequence_length (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.sequence_length", false]], "shots (gadd.gadd.trainingconfig attribute)": [[1, "gadd.gadd.TrainingConfig.shots", false]], "standardsequences (class in gadd.strategies)": [[3, "gadd.strategies.StandardSequences", false]], "success_probability() (gadd.utility_functions.utilityfactory static method)": [[4, "gadd.utility_functions.UtilityFactory.success_probability", false]], "successprobability (class in gadd.utility_functions)": [[4, "gadd.utility_functions.SuccessProbability", false]], "timestamp (gadd.gadd.trainingstate attribute)": [[1, "gadd.gadd.TrainingState.timestamp", false]], "to_dict() (gadd.gadd.trainingconfig method)": [[1, "gadd.gadd.TrainingConfig.to_dict", false]], "to_dict() (gadd.gadd.trainingresult method)": [[1, "gadd.gadd.TrainingResult.to_dict", false]], "to_dict() (gadd.gadd.trainingstate method)": [[1, "gadd.gadd.TrainingState.to_dict", false]], "to_dict() (gadd.strategies.colorassignment method)": [[3, "gadd.strategies.ColorAssignment.to_dict", false]], "to_dict() (gadd.strategies.ddstrategy method)": [[3, "gadd.strategies.DDStrategy.to_dict", false]], "to_gate() (gadd.circuit_padding.ddpulse method)": [[0, "gadd.circuit_padding.DDPulse.to_gate", false]], "to_indices() (gadd.strategies.ddsequence method)": [[3, "gadd.strategies.DDSequence.to_indices", false]], "train() (gadd.gadd.gadd method)": [[1, "gadd.gadd.GADD.train", false]], "training_time (gadd.gadd.trainingresult attribute)": [[1, "gadd.gadd.TrainingResult.training_time", false]], "trainingconfig (class in gadd.gadd)": [[1, "gadd.gadd.TrainingConfig", false]], "trainingresult (class in gadd.gadd)": [[1, "gadd.gadd.TrainingResult", false]], "trainingstate (class in gadd.gadd)": [[1, "gadd.gadd.TrainingState", false]], "utility_function (gadd.gadd.gadd property)": [[1, "gadd.gadd.GADD.utility_function", false]], "utilityfactory (class in gadd.utility_functions)": [[4, "gadd.utility_functions.UtilityFactory", false]], "utilityfunction (class in gadd.utility_functions)": [[4, "gadd.utility_functions.UtilityFunction", false]], "validate_coloring() (gadd.strategies.colorassignment method)": [[3, "gadd.strategies.ColorAssignment.validate_coloring", false]], "verify_state() (gadd.utility_functions.utilityfunction method)": [[4, "gadd.utility_functions.UtilityFunction.verify_state", false]]}, "objects": {"gadd": [[0, 0, 0, "-", "circuit_padding"], [1, 0, 0, "-", "gadd"], [3, 0, 0, "-", "strategies"], [4, 0, 0, "-", "utility_functions"]], "gadd.circuit_padding": [[0, 1, 1, "", "DDPulse"], [0, 3, 1, "", "apply_dd_strategy"], [0, 3, 1, "", "get_instruction_duration"]], "gadd.circuit_padding.DDPulse": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "to_gate"]], "gadd.gadd": [[1, 1, 1, "", "GADD"], [1, 1, 1, "", "TrainingConfig"], [1, 1, 1, "", "TrainingResult"], [1, 1, 1, "", "TrainingState"]], "gadd.gadd.GADD": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "apply_strategy"], [1, 4, 1, "", "backend"], [1, 4, 1, "", "coloring"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "load_training_state"], [1, 2, 1, "", "plot_training_progress"], [1, 4, 1, "", "seed"], [1, 2, 1, "", "train"], [1, 4, 1, "", "utility_function"]], "gadd.gadd.TrainingConfig": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__str__"], [1, 5, 1, "", "decoupling_group"], [1, 5, 1, "", "dynamic_mutation"], [1, 2, 1, "", "from_dict"], [1, 5, 1, "", "mode"], [1, 5, 1, "", "mutation_decay"], [1, 5, 1, "", "mutation_probability"], [1, 5, 1, "", "n_iterations"], [1, 5, 1, "", "num_colors"], [1, 5, 1, "", "optimization_level"], [1, 5, 1, "", "parent_fraction"], [1, 5, 1, "", "pop_size"], [1, 5, 1, "", "sequence_length"], [1, 5, 1, "", "shots"], [1, 2, 1, "", "to_dict"]], "gadd.gadd.TrainingResult": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "__post_init__"], [1, 2, 1, "", "__str__"], [1, 5, 1, "", "benchmark_history"], [1, 5, 1, "", "benchmark_scores"], [1, 5, 1, "", "best_score"], [1, 5, 1, "", "best_sequence"], [1, 5, 1, "", "config"], [1, 5, 1, "", "final_population"], [1, 5, 1, "", "iteration_data"], [1, 2, 1, "", "to_dict"], [1, 5, 1, "", "training_time"]], "gadd.gadd.TrainingState": [[1, 2, 1, "", "__init__"], [1, 5, 1, "", "best_scores"], [1, 5, 1, "", "best_sequences"], [1, 2, 1, "", "from_dict"], [1, 5, 1, "", "iteration"], [1, 5, 1, "", "iteration_data"], [1, 5, 1, "", "mutation_probability"], [1, 5, 1, "", "population"], [1, 5, 1, "", "timestamp"], [1, 2, 1, "", "to_dict"]], "gadd.strategies": [[3, 1, 1, "", "ColorAssignment"], [3, 1, 1, "", "DDSequence"], [3, 1, 1, "", "DDStrategy"], [3, 1, 1, "", "StandardSequences"], [3, 3, 1, "", "create_xb_gate"], [3, 3, 1, "", "create_yb_gate"]], "gadd.strategies.ColorAssignment": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__str__"], [3, 2, 1, "", "from_circuit"], [3, 2, 1, "", "from_manual_assignment"], [3, 2, 1, "", "get_color"], [3, 2, 1, "", "get_qubits"], [3, 4, 1, "", "n_colors"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "validate_coloring"]], "gadd.strategies.DDSequence": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "__post_init__"], [3, 2, 1, "", "copy"], [3, 5, 1, "", "gates"], [3, 2, 1, "", "to_indices"]], "gadd.strategies.DDStrategy": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_single_sequence"], [3, 2, 1, "", "get_sequence"], [3, 2, 1, "", "to_dict"]], "gadd.strategies.StandardSequences": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get"], [3, 2, 1, "", "is_staggered"], [3, 2, 1, "", "list_available"]], "gadd.utility_functions": [[4, 1, 1, "", "CustomUtility"], [4, 1, 1, "", "GHZUtility"], [4, 1, 1, "", "OneNormDistance"], [4, 1, 1, "", "SuccessProbability"], [4, 1, 1, "", "UtilityFactory"], [4, 1, 1, "", "UtilityFunction"], [4, 3, 1, "", "normalize_counts"]], "gadd.utility_functions.CustomUtility": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__str__"], [4, 2, 1, "", "compute"], [4, 2, 1, "", "get_name"]], "gadd.utility_functions.GHZUtility": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__str__"], [4, 2, 1, "", "get_name"]], "gadd.utility_functions.OneNormDistance": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__str__"], [4, 2, 1, "", "compute"], [4, 2, 1, "", "get_name"]], "gadd.utility_functions.SuccessProbability": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__str__"], [4, 2, 1, "", "compute"], [4, 2, 1, "", "get_name"]], "gadd.utility_functions.UtilityFactory": [[4, 2, 1, "", "custom"], [4, 2, 1, "", "ghz_state"], [4, 2, 1, "", "one_norm"], [4, 2, 1, "", "success_probability"]], "gadd.utility_functions.UtilityFunction": [[4, 2, 1, "", "compute"], [4, 2, 1, "", "get_name"], [4, 2, 1, "", "verify_state"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [0, 3], "0": [1, 3, 4, 5], "00": 4, "000": [4, 5], "001": 4, "02294": 5, "1": [1, 3, 4], "10": [0, 5], "101": 4, "11": 4, "111": [4, 5], "16": [1, 5], "2": [0, 2, 3, 4], "20": 1, "2024": 5, "22e": 0, "2403": 5, "25": 1, "2d": 2, "3": [1, 4], "32": 5, "4": [3, 4], "4000": 1, "42": 5, "5": [4, 5], "50": [4, 5], "75": 1, "8": [1, 5], "8000": 5, "A": 3, "For": 4, "If": [0, 1, 3, 4, 5], "In": 3, "It": [0, 2, 4], "The": [0, 1, 2, 3, 4, 5], "To": 5, "__init__": [0, 1, 2, 3, 4, 5], "__post_init__": [1, 3], "__str__": [1, 3, 4], "ab": 5, "abc": 4, "abstract": 4, "access": 3, "accord": 2, "account": 5, "act": 0, "adapt": [3, 5], "addit": 3, "additionl": 0, "adjac": 3, "adjust": 1, "after": 3, "against": [1, 3, 5], "agreement": 4, "algebra": 2, "algorithm": [1, 4], "all": [3, 4], "allow": [2, 4], "also": [3, 5], "an": [0, 4, 5], "analyz": 4, "ani": [1, 3], "apach": 5, "appli": [0, 1, 3], "applic": [3, 4], "apply_dd_strategi": 0, "apply_strategi": 1, "approach": [0, 3], "appropri": 1, "ar": [3, 4, 5], "articl": 5, "arxiv": 5, "assign": 3, "author": 5, "automat": 4, "avail": 3, "awar": [0, 1, 3], "backend": [0, 1, 3, 5], "backendv2": [0, 3], "base": [0, 1, 2, 3, 4, 5], "baselin": 3, "basic": 3, "benchmark": [1, 4], "benchmark_histori": 1, "benchmark_scor": 1, "benchmark_strategi": 1, "bernstein": 4, "best": 5, "best_scor": 1, "best_sequ": 1, "best_strategi": [1, 5], "better": 4, "between": [3, 4], "beyond": 4, "bib": 5, "bibek": 5, "bibtex": 5, "binari": 4, "bitgener": 1, "bitstr": 4, "bloch": 2, "boilerpl": 4, "bool": [0, 1, 3], "both": [3, 4], "build": 5, "built": 4, "calcul": [4, 5], "callabl": [1, 4], "can": [1, 3, 4], "canon": 5, "carr": 3, "case": [3, 4], "cd": 5, "check": 3, "checkpoint": [1, 5], "checkpoint_iter_20": 5, "checkpoint_path": 1, "christoph": 5, "circuit": [1, 3, 4, 5], "circuit_pad": [0, 5], "cite": 5, "class": [0, 1, 2, 3, 4, 5], "classmethod": [1, 3], "client": 5, "clone": 5, "code": 4, "collect": 3, "color": [0, 1, 3, 5], "colorassign": [1, 3], "com": 5, "common": 4, "commonli": 3, "commun": 5, "compar": [1, 3, 4, 5], "comparison": 1, "comparison_seq": 5, "complet": [2, 3], "complete_sequence_to_ident": 2, "comprehens": 4, "comput": 4, "config": [1, 5], "configur": [1, 4, 5], "connect": 3, "consist": 4, "constraint": [2, 3], "construct": [0, 2, 4], "contain": [0, 3], "control": 3, "conveni": [1, 4], "converg": 4, "convers": 0, "convert": [0, 3, 4], "copi": 3, "core": 5, "correct": 4, "correl": 3, "correspond": [0, 3, 4], "count": [3, 4, 5], "counterpart": 3, "cover": 4, "cpmg": [3, 5], "cpmg_stagger": [3, 5], "cr": [0, 1, 3], "creat": [3, 4, 5], "create_xb_g": 3, "create_yb_g": 3, "creation": 4, "crosstalk": [0, 1, 3], "custom": [2, 3, 4], "custom_fidel": 5, "customutil": 4, "cx": 5, "data": [1, 3, 5], "dd": [0, 1, 2, 4, 5], "dd_option": 0, "ddpuls": 0, "ddsequenc": 3, "ddstrategi": [0, 1, 3], "decoupl": [0, 1, 2, 3, 4], "decoupling_group": 1, "decouplinggroup": [1, 2, 3], "deep": 3, "def": [4, 5], "default": [0, 1, 2, 3], "default_group": 2, "defin": [2, 3, 4], "definit": 5, "depend": [4, 5], "describ": [0, 3, 4, 5], "descript": 4, "deseri": 1, "design": [3, 5], "desir": [4, 5], "determinist": 4, "dev": 5, "develop": 5, "devic": 3, "dict": [0, 1, 2, 3, 4], "dictionari": [1, 3, 4], "differ": 3, "direct": 4, "distanc": [4, 5], "distinct": 1, "distribut": [4, 5], "doc": 5, "document": 5, "doesn": 4, "dt": 0, "durat": [0, 3], "dure": [0, 3], "dynam": [0, 1, 2, 3, 4], "dynamic_mut": [1, 5], "e": [0, 5], "each": [0, 1, 3, 4], "edd": [3, 5], "edd_stagg": [3, 5], "edg": 3, "effect": 3, "eight": 3, "either": [1, 3], "element": [2, 3], "element_index": 2, "element_nam": 2, "empir": 5, "empti": [3, 4], "enabl": 4, "encapsul": [0, 3, 4], "encod": 2, "end": 1, "enhanc": 3, "ensur": [3, 4], "entangl": 4, "environ": 3, "equal": 4, "error": [3, 4], "establish": 3, "eulerian": 3, "evalu": [1, 4, 5], "evaluate_benchmarks_each_iter": 1, "exampl": [2, 3, 4], "execut": [0, 1], "expect": [4, 5], "expected_dist": 5, "experi": [3, 5], "experiment": 4, "explor": 2, "extend": 2, "extract": [1, 3], "factor": 1, "factori": [1, 4], "fals": [0, 1, 3], "fidel": [4, 5], "file": [1, 5], "final_popul": 1, "find": 2, "first": [2, 3], "fit": 4, "fixtur": 5, "flexibl": 4, "float": [0, 1, 4], "follow": 0, "form": 4, "format": [3, 4], "four": 3, "fraction": 1, "from": [0, 1, 2, 3, 4], "from_circuit": 3, "from_dict": [1, 3], "from_manual_assign": 3, "from_single_sequ": 3, "function": 1, "g": [0, 1, 2], "ga": 1, "gadd": [0, 2, 3, 4], "gate": [0, 3, 5], "gate_nam": 0, "gener": [1, 4], "genet": [1, 4], "get": [0, 2, 3, 4, 5], "get_color": 3, "get_count": 5, "get_instruction_dur": 0, "get_nam": 4, "get_qubit": 3, "get_sequ": 3, "ghz": [4, 5], "ghz_state": 4, "ghz_util": 4, "ghzutil": 4, "gill": 3, "git": 5, "github": 5, "give": 2, "goal": 4, "graph": [3, 5], "greenberg": 4, "group": [1, 3, 5], "group_oper": [1, 2, 5], "guid": 4, "h": 5, "ha": [3, 4], "half": 4, "handl": [0, 1, 4], "hardwar": 5, "have": 3, "helena": 5, "heterogen": 3, "higher": [4, 5], "histori": 1, "horn": 4, "how": 4, "http": 5, "human": [1, 3, 4], "i": [0, 1, 2, 3, 4, 5], "ibm": 5, "ideal": 4, "ideal_distribut": 4, "ident": [2, 3], "idl": [0, 3], "im": 2, "implement": [3, 4, 5], "import": 5, "includ": 0, "incomplet": 2, "independ": 3, "index": [0, 2, 3], "indic": [2, 3, 4], "inform": [0, 2], "initi": [1, 3, 5], "input": [1, 4], "insensit": 3, "insert": 0, "instanc": 1, "instanti": 4, "instruct": 0, "int": [0, 1, 2, 3, 4], "integ": [2, 3, 4], "integr": 5, "intermedi": 5, "invalid": [3, 4], "invers": 2, "inverse_map": 2, "invert": 2, "ip": 2, "is_stagg": 3, "item": 5, "iter": [1, 5], "iteration_data": 1, "its": 1, "j": 2, "journal": 5, "json": [3, 5], "k": [1, 4], "kei": [4, 5], "keyerror": 3, "known": [3, 4], "l": 1, "larger": 5, "learn": 5, "least_busi": 5, "leav": 3, "length": 1, "level": 1, "licens": 5, "like": 4, "list": [0, 1, 2, 3], "list_avail": 3, "load": 1, "load_training_st": [1, 5], "m": 2, "mai": 3, "main": [4, 5], "maintain": [2, 3], "manual": 3, "map": [0, 2, 3, 4], "match": 4, "mathemat": 2, "maxim": 4, "md": 5, "measur": [3, 4], "measure_al": 5, "measurement_count": 4, "meiboom": 3, "method": [0, 1, 4], "metric": 4, "minu": 4, "mitig": 3, "mock": 5, "mode": 1, "modul": [0, 4], "more": 5, "multi": 3, "multipl": 2, "multipli": 2, "must": [1, 4], "mutat": [1, 5], "mutation_decai": 1, "mutation_prob": [1, 5], "my_util": 4, "n_color": 3, "n_iter": [1, 5], "n_qubit": 4, "name": [0, 2, 3, 4], "need": [0, 2, 5], "neg": 2, "neighbor": 3, "neither": 3, "new": 3, "node": 3, "nois": 3, "non": [3, 4], "none": [0, 1, 2, 3, 4], "nor": 3, "norm": [4, 5], "normal": 4, "normalize_count": 4, "novel": 4, "num_color": [1, 5], "number": [1, 3, 4], "object": [0, 1, 2, 3, 4], "observ": 4, "observed_dist": 5, "offer": 3, "one": 4, "one_norm": 4, "onenormdist": 4, "onli": 1, "oper": [3, 5], "optim": [1, 3, 4, 5], "optimization_level": 1, "option": [0, 1, 2, 3, 4, 5], "oracular": 4, "order": 3, "origin": 0, "other": 4, "otherwis": 3, "outcom": 4, "output": [1, 5], "over": 4, "own": 4, "p": [2, 4], "p1": 2, "p2": 2, "p_ideal": 4, "p_observ": 4, "packag": 5, "pad": [1, 3, 5], "paddynamicaldecoupl": 0, "paper": [0, 1, 2, 3, 4, 5], "paramet": [0, 1, 2, 3, 4], "parent": 1, "parent_fract": 1, "partial_sequ": 2, "particularli": 4, "pass": 0, "path": 1, "pattern": 3, "pauli": [2, 3], "per": [1, 3, 5], "perfect": 4, "perform": [1, 3, 4], "period": [0, 3], "phase": [2, 3], "pip": 5, "pleas": 5, "plot": [1, 5], "plot_training_progress": [1, 5], "png": 5, "pokharel": 5, "pop_siz": [1, 5], "popul": [1, 5], "posit": [2, 3, 4], "possibl": 4, "potenti": 4, "practic": 3, "prepar": 4, "preprint": 5, "preserv": 4, "previou": [1, 5], "previous_st": 5, "probabl": [1, 4], "process": [4, 5], "processor": 5, "produc": 4, "progress": [1, 5], "proper": [3, 4], "properti": [1, 2, 3], "provid": [0, 3, 4], "puls": [0, 3], "purcel": 3, "py": 5, "pygraph": 3, "pyproject": 5, "python": 5, "qiskit": [0, 1, 5], "qiskit_ibm_runtim": 5, "qiskitruntimeservic": 5, "quantifi": 4, "quantum": [0, 1, 3, 4, 5], "quantumcircuit": [0, 1, 3, 5], "quasidistribut": 4, "qubit": [0, 3, 4, 5], "rais": [0, 3, 4], "random": 1, "rang": [3, 4], "rate": 5, "readabl": [1, 3, 4], "readm": 5, "receiv": [3, 4], "recogn": [0, 3], "reduc": [3, 4], "rel": 4, "relationship": 2, "repeat": 3, "replic": 3, "repres": [0, 2], "represent": [0, 1, 3, 4], "reproduct": 1, "request": 3, "research": 5, "respect": 5, "result": [1, 2, 5], "resum": 1, "resume_from_st": [1, 5], "retriev": 3, "return": [0, 1, 2, 3, 4, 5], "revers": 2, "robust": 3, "rotat": 2, "run": [1, 5], "runtim": 5, "same": 3, "sampler": [1, 5], "samplerv2": 1, "save": 1, "save_iter": 1, "save_path": [1, 5], "scalar": 4, "scenario": 4, "schedul": 3, "score": 4, "search": 4, "second": [0, 2], "seed": [1, 5], "seedsequ": 1, "self": 1, "seq1": 3, "seq2": 3, "sequenc": [0, 1, 2, 3, 4, 5], "sequence_length": [1, 5], "serial": [1, 3], "serv": 4, "servic": 5, "set": 5, "setup": 4, "shift": 3, "shot": [1, 5], "should": [0, 3, 4], "simpl": [3, 5], "simplifi": [3, 4], "singl": [0, 3, 4], "size": [1, 2], "sophist": 3, "sourc": [0, 1, 2, 3, 4], "special": 4, "specif": [1, 3, 4, 5], "specifi": [0, 3, 4], "sphere": 2, "stagger": [0, 1, 3], "standard": [3, 4], "standardsequ": 3, "state": [1, 4, 5], "static": 4, "statist": 4, "str": [0, 1, 2, 3, 4], "strategi": [0, 1, 5], "string": [1, 3, 4], "structur": [2, 3], "subclass": 4, "subscript": 2, "success": 4, "success_prob": 4, "success_probability_util": 5, "successprob": 4, "suit": 5, "suitabl": 3, "sum": 5, "support": 5, "suppress": [0, 1, 3, 4], "systemat": [2, 3], "t": 4, "tabl": 2, "tailor": 3, "take": 4, "target": [0, 1, 4, 5], "target_circuit": [1, 5], "target_st": 4, "task": 4, "test": 5, "test_circuit_pad": 5, "test_gadd": 5, "test_group_oper": 5, "test_integr": 5, "test_sequ": 5, "test_utility_funct": 5, "thei": 4, "theori": 5, "thi": [0, 1, 2, 3, 4, 5], "through": 3, "time": [0, 3], "timeline_draw": 5, "timestamp": 1, "titl": 5, "to_dict": [1, 3], "to_gat": 0, "to_indic": 3, "toml": 5, "tong": 5, "tong2024empir": 5, "total": 4, "total_shot": 5, "toward": 4, "train": 1, "training_circuit": [1, 5], "training_plot": 5, "training_result": 1, "training_tim": 1, "trainingconfig": [1, 5], "trainingresult": 1, "trainingst": 1, "transform": 0, "transpil": 1, "true": [1, 3, 5], "tupl": 1, "two": [2, 3], "type": [0, 1, 2, 3], "typeerror": 3, "typic": 3, "unaffect": 3, "uniform": [1, 3], "unit": 0, "univers": 3, "urdd": 3, "us": [0, 1, 2, 3, 4, 5], "user": 4, "util": [0, 1], "utility_funct": [1, 4, 5], "utilityfactori": [4, 5], "utilityfunct": [1, 4], "valid": 3, "validate_color": 3, "valu": [3, 4, 5], "valueerror": [0, 3, 4], "variat": 4, "variou": 4, "vazirani": 4, "verifi": 4, "verify_st": 4, "visual": 5, "weight": 4, "well": [3, 4], "when": 0, "where": [2, 3, 4], "whether": [0, 1], "which": [3, 4], "while": 3, "wide": 3, "within": 0, "work": 5, "wrapper": 4, "x": [0, 3], "xb": 3, "xm": 2, "xp": [0, 2], "xy": 3, "xy4": [3, 5], "xy4_stagg": [3, 5], "y": [0, 3], "yb": 3, "year": 5, "ym": [0, 2], "you": 5, "your": 5, "yp": 2, "z": 3, "zeiling": 4, "zero": 4, "zhang": 5, "zm": 2, "zp": 2, "\u03c3": 4}, "titles": ["Circuit Padding", "GADD Core Module", "Group Operations", "DD Strategies", "Utility Functions", "GADD: Genetic Algorithm for Dynamical Decoupling"], "titleterms": {"1": 5, "2": 5, "3": 5, "4": 5, "algorithm": 5, "basic": 5, "circuit": 0, "citat": 5, "core": 1, "custom": 5, "dd": 3, "decoupl": 5, "directori": 5, "dynam": 5, "exampl": 5, "from": 5, "function": [4, 5], "gadd": [1, 5], "genet": 5, "group": 2, "instal": 5, "modul": 1, "oper": 2, "pad": 0, "paramet": 5, "pypi": 5, "requir": 5, "resum": 5, "save": 5, "sourc": 5, "strategi": 3, "structur": 5, "train": 5, "usag": 5, "util": [4, 5]}})